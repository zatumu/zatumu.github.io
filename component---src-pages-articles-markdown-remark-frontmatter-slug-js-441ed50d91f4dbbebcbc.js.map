{"version":3,"file":"component---src-pages-articles-markdown-remark-frontmatter-slug-js-441ed50d91f4dbbebcbc.js","mappings":"weACWA,EAAY,gCACZC,EAAS,6BACTC,EAAQ,4BACRC,EAAQ,4BACRC,EAAa,iCACbC,EAAc,kCACdC,EAAO,2BACP,EAAM,0BACNC,EAAY,gCACZC,EAAe,mCACfC,EAAmB,uCCDf,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,KACAC,EACC,EADDA,SAEQC,EAAmBF,EAAnBE,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KAErB,OACE,gBAACC,EAAA,EAAD,CAAQJ,SAAUA,GAChB,gBAACK,EAAA,EAAD,CAAKf,MAAOY,EAAYZ,MAAOgB,YAAaJ,EAAYK,UACxD,uBAAKC,UAAWC,GACd,0BAAQD,UAAWC,GACjB,sBAAID,UAAWC,EAAcC,GAAID,GAC9BP,EAAYZ,OAEf,yBAAOkB,UAAWC,GAChB,wBAAME,SAAUT,EAAYU,OAAQJ,UAAWC,GAC5CP,EAAYU,QAEf,wBAAMD,SAAUT,EAAYW,QAASL,UAAWC,GAC7CP,EAAYW,SAEO,OAArBX,EAAYR,KACX,sBAAIc,UAAWC,GACZP,EAAYR,KAAKoB,KAAI,SAACC,GAAD,OACpB,sBAAIP,UAAWC,GAAaM,OAG9B,MAIN,0BAAQP,UAAWC,GAChBP,EAAYc,OACX,uBAAKR,UAAWC,GACd,uBACED,UAAWC,EAAAA,gBACXQ,UAAWC,EAAAA,EAAY,IAAMhB,EAAYiB,QAG3CjB,EAAYkB,UACd,uBAAKC,IAAKnB,EAAYkB,UAAWE,IAAI,KAGnC,uBAAKC,MAAM,WAAX,YAGJ,8BAAYf,UAAWC,GACpBP,EAAYK,WAMnB,uBACEC,UAAWC,EAAAA,QACXe,wBAAyB,CAAEC,OAAQtB,S,qBClE7C,IAAe,IAA0B","sources":["webpack://myBlog/./src/pages/articles/post.module.css","webpack://myBlog/./src/pages/articles/{MarkdownRemark.frontmatter__slug}.js","webpack://myBlog/./contents/images/sprite.svg"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"post-module--container--2_7-d\";\nexport var header = \"post-module--header--37YbD\";\nexport var title = \"post-module--title--2xS_X\";\nexport var aside = \"post-module--aside--1WmD2\";\nexport var postedTime = \"post-module--postedTime--1uk-K\";\nexport var updatedTime = \"post-module--updatedTime--3Asp5\";\nexport var tags = \"post-module--tags--rR-9R\";\nexport var tag = \"post-module--tag--20TMG\";\nexport var mainImage = \"post-module--mainImage--3yS8m\";\nexport var mainImageSvg = \"post-module--mainImageSvg--1M9Oj\";\nexport var mainImageCaption = \"post-module--mainImageCaption--12woV\";\nexport var fade = \"post-module--fade--2NZ-Y\";","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../../components/Layout\";\n\n// import MainImage from \"../assets/test.svg\";\n// import MainImage from `../assets/${frontmatter.slug}.svg`;\nimport MainImage from \"../../../contents/images/sprite.svg\";\nimport SEO from \"../../components/SEO\";\nimport * as styles from \"./post.module.css\";\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n  location,\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n\n  return (\n    <Layout location={location}>\n      <SEO title={frontmatter.title} description={frontmatter.extract} />\n      <div className={styles.container}>\n        <header className={styles.header}>\n          <h1 className={styles.title} id={styles.title}>\n            {frontmatter.title}\n          </h1>\n          <aside className={styles.aside}>\n            <time dateTime={frontmatter.posted} className={styles.postedTime}>\n              {frontmatter.posted}\n            </time>\n            <time dateTime={frontmatter.updated} className={styles.updatedTime}>\n              {frontmatter.updated}\n            </time>\n            {frontmatter.tags !== null ? (\n              <ul className={styles.tags}>\n                {frontmatter.tags.map((tag) => (\n                  <li className={styles.tag}>{tag}</li>\n                ))}\n              </ul>\n            ) : null}\n          </aside>\n\n          {/* 以下のメインイメージはコンポーネント化しよう */}\n          <figure className={styles.mainImage}>\n            {frontmatter.illust ? (\n              <svg className={styles.mainImageSvg}>\n                <use\n                  className={styles.mainImageSvgUse}\n                  xlinkHref={MainImage + \"#\" + frontmatter.slug}\n                />\n              </svg>\n            ) : frontmatter.mainPhoto ? (\n              <img src={frontmatter.mainPhoto} alt=\"\" />\n            ) : (\n              (\n                <div class=\"noimage\">no-image</div>\n              )\n            )}\n            <figcaption className={styles.mainImageCaption}>\n              {frontmatter.extract}\n            </figcaption>\n          </figure>\n          \n        </header>\n\n        <div\n          className={styles.content}\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        posted(formatString: \"YYYY-MM-DD\")\n        updated(formatString: \"YYYY-MM-DD\")\n        slug\n        title\n        extract\n        tags\n        mainPhoto\n        illust\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/sprite-c12f482a2c576faa73308be759c5f5f6.svg\";"],"names":["container","header","title","aside","postedTime","updatedTime","tags","mainImage","mainImageSvg","mainImageCaption","Template","data","location","markdownRemark","frontmatter","html","Layout","SEO","description","extract","className","styles","id","dateTime","posted","updated","map","tag","illust","xlinkHref","MainImage","slug","mainPhoto","src","alt","class","dangerouslySetInnerHTML","__html"],"sourceRoot":""}