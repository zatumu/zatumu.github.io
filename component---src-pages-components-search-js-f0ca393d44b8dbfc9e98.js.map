{"version":3,"file":"component---src-pages-components-search-js-f0ca393d44b8dbfc9e98.js","mappings":"8HAeA,UAbwB,SAAAA,GACtB,IAAQC,EAAkBD,EAAlBC,IAAKC,EAAaF,EAAbE,SAEPC,EADOF,EAAIG,cACEC,QAAQH,EAASE,eAC9BE,EAAMH,EAAQD,EAASK,OACvBC,EAAOP,EAAIQ,MAAMN,EAAOG,GACxBI,EAAMT,EAAIU,QACdH,EADU,sEAE4DA,EAF5D,WAIZ,OAAO,wBAAMI,wBAAyB,CAAEC,OAAQH,O,6DCN5CI,EAAe,SAACd,GACpB,IAAMe,GAAWC,EAAAA,EAAAA,IAAe,cAoBhC,GAAwBC,EAAAA,EAAAA,UAAS,IAA1BC,EAAP,KAAaC,EAAb,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,GACbN,EAASO,kBAAkBC,MAAMC,KAAI,SAACC,GACpCJ,EAAKK,KAAKD,EAAEE,KAAKC,gBAEnBT,EAAQE,KACP,IAGH,OAAkCJ,EAAAA,EAAAA,UAAS,IAApCY,EAAP,KAAkBC,EAAlB,MACAV,EAAAA,EAAAA,YAAU,WACR,IAAIW,EAUJ,OAREA,EADE/B,EAAMgC,OAAyB,KAAhBhC,EAAMiC,MAClBC,YAAW,WACdJ,EAAa,YACZ,KAEEI,YAAW,WACdJ,EAAa,MACZ,KAEE,WACLK,aAAaJ,MAEd,CAAC/B,EAAMgC,MAAOhC,EAAMiC,QAGvB,OAA4BhB,EAAAA,EAAAA,UAAS,IAA9BmB,EAAP,KAAeC,EAAf,KAoBA,OANAjB,EAAAA,EAAAA,YAAU,WAZK,IACPa,EACAZ,EAWc,KAAhBrB,EAAMiC,QAZJA,EAAQjC,EAAMiC,MAAM7B,cACpBiB,EAAOH,EAAKoB,QAAO,SAACb,GAKxB,OAAkC,KAJtB,WACVA,EAAEc,MAAMnC,cADE,WAEVqB,EAAEe,QAAQpC,cAFA,UAIEC,QAAQ4B,MAExBI,EAAUhB,MAOT,CAACrB,EAAMiC,QAGR,uBAAKJ,UAAWA,GACd,uBAAKA,UAAU,eACb,wBAAMA,UAAU,OACd,yBAAIO,EAAO7B,QADb,YAGA,0BACG6B,EAAOZ,KAAI,SAACC,GACX,OACE,sBAAIgB,IAAKhB,EAAEiB,MACT,gBAAC,KAAD,CAAMC,GAAE,SAAWlB,EAAEiB,KAAb,KASxB,gBAAC,UAAD,CAAiBzC,IAAKwB,EAAEc,MAAOrC,SAAUF,EAAMiC,iBAmC/C,UAxBe,SAACjC,GACd,OAA0BiB,EAAAA,EAAAA,WAAS,GAA5Be,EAAP,KAAcY,EAAd,KACA,GAA0B3B,EAAAA,EAAAA,UAAS,IAA5BgB,EAAP,KAAcY,EAAd,KAUA,OACE,uBAAKhB,UAAW7B,EAAM6B,UAAWG,MAAOA,GACtC,yBACEc,KAAK,OACLC,QAbU,WACdH,GAAS,IAaLI,OAXS,WACbJ,GAAS,IAWLK,SATW,SAACxB,GAChBoB,EAASpB,EAAEyB,OAAOjB,UAUhB,gBAACnB,EAAD,CAAckB,MAAOA,EAAOC,MAAOA","sources":["webpack://myBlog/./src/pages/components/Highlighter.js","webpack://myBlog/./src/pages/components/Search.js"],"sourcesContent":["import React from \"react\"\n\nconst TextHighlighter = props => {\n  const { str, includes } = props\n  const temp = str.toLowerCase()\n  const start = temp.indexOf(includes.toLowerCase())\n  const end = start + includes.length\n  const item = str.slice(start, end)\n  const res = str.replace(\n    item,\n    `<span style=\"background: rgba(255, 250, 118, 0.4); padding: 3px 0\">${item}</span>`\n  )\n  return <span dangerouslySetInnerHTML={{ __html: res }} />\n}\n\nexport default TextHighlighter","import React, { useState, useEffect } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\nimport TextHighlighter from \"./Highlighter\";\n\n\nconst SearchResult = (props) => {\n  const tempData = useStaticQuery(graphql`\n    query SearchData {\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___posted], order: DESC }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            frontmatter {\n              posted(formatString: \"YYYY-MM-DD\")\n              title\n              slug\n              extract\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const temp = [];\n    tempData.allMarkdownRemark.edges.map((e) => {\n      temp.push(e.node.frontmatter);\n    });\n    setData(temp);\n  }, []);\n\n  //表示非表示の切り替え\n  const [className, setClassName] = useState(\"\");\n  useEffect(() => {\n    let id;\n    if (props.focus && props.value !== \"\") {\n      id = setTimeout(() => {\n        setClassName(\"active\");\n      }, 100);\n    } else {\n      id = setTimeout(() => {\n        setClassName(\"\");\n      }, 100);\n    }\n    return () => {\n      clearTimeout(id);\n    };\n  }, [props.focus, props.value]);\n\n  //検索処理\n  const [result, setResult] = useState([]);\n\n  const search = () => {\n    const value = props.value.toLowerCase();\n    const temp = data.filter((e) => {\n      const target = `\n      ${e.title.toLowerCase()}\n      ${e.extract.toLowerCase()}\n    `;\n      return target.indexOf(value) !== -1;\n    });\n    setResult(temp);\n  };\n\n  useEffect(() => {\n    if (props.value !== \"\") {\n      search();\n    }\n  }, [props.value]);\n\n  return (\n    <div className={className}>\n      <div className=\"resultInner\">\n        <span className=\"res\">\n          <b>{result.length}</b>件ヒットしました\n        </span>\n        <ul>\n          {result.map((e) => {\n            return (\n              <li key={e.slug}>\n                <Link to={`/post/${e.slug}/`}>\n                  {/* <TextHighlighter\n                    title={e.title}\n                    extract={e.extract}\n                    includes={props.value}\n                  /> */}\n                  {/* {e.title\n                  } */}\n\n<TextHighlighter str={e.title} includes={props.value} />\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Search = (props) => {\n  const [focus, setFocus] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const onFocus = () => {\n    setFocus(true);\n  };\n  const onBlur = () => {\n    setFocus(false);\n  };\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n  return (\n    <div className={props.className} focus={focus}>\n      <input\n        type=\"text\"\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onChange={onChange}\n      />\n      <SearchResult focus={focus} value={value} />\n    </div>\n  );\n};\nexport default Search;\n"],"names":["props","str","includes","start","toLowerCase","indexOf","end","length","item","slice","res","replace","dangerouslySetInnerHTML","__html","SearchResult","tempData","useStaticQuery","useState","data","setData","useEffect","temp","allMarkdownRemark","edges","map","e","push","node","frontmatter","className","setClassName","id","focus","value","setTimeout","clearTimeout","result","setResult","filter","title","extract","key","slug","to","setFocus","setValue","type","onFocus","onBlur","onChange","target"],"sourceRoot":""}