{"version":3,"file":"component---src-pages-post-markdown-remark-frontmatter-slug-js-caa6b4ebd69552affe2d.js","mappings":"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","sources":["webpack://myBlog/./src/pages/components/Footer.js","webpack://myBlog/./src/pages/components/Header.js","webpack://myBlog/./src/pages/components/Header.module.css","webpack://myBlog/./src/pages/components/Layout.js","webpack://myBlog/./src/pages/components/layout.module.css","webpack://myBlog/./src/pages/components/Search.js","webpack://myBlog/./src/pages/post/post.module.css","webpack://myBlog/./src/pages/post/{MarkdownRemark.frontmatter__slug}.js","webpack://myBlog/./contents/images/sprite.svg"],"sourcesContent":["import React from \"react\";\n\nconst Footer = () =>{\n    return(\n        <footer className=\"\">\n            <small className=\"\">&copy;</small>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Header.module.css\";\nimport { menu } from \"./_Variables\";\nimport Search from \"./Search\";\n// import Modal from \"./Modal\";\n\nconst Header = () => {\n  return (\n    <header className={styles.container}>\n      <div className={styles.inner}>\n        <h1 className={styles.siteName}>\n          <Link to=\"/\">Header</Link>\n        </h1>\n        <Search />\n        {/* <Modal /> */}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport var container = \"Header-module--container--3I6Xw\";\nexport var inner = \"Header-module--inner--3rdw3\";\nexport var siteName = \"Header-module--siteName--2WuQ0\";\nexport var globalNavi = \"Header-module--globalNavi--j5bJJ\";\nexport var globalNaviItem = \"Header-module--globalNaviItem--2HDOZ\";","import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport  \"../../styles/style.css\";\n\nimport * as styles from \"./layout.module.css\"\n\nconst Layout = (props) =>{\n    return(\n        <div className={styles.container}>\n            <Header />\n            <main className={styles.inner}>{props.children}</main>\n            <Footer />\n        </div>\n    );\n};\n\nexport default Layout;","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--3LvKr\";\nexport var inner = \"layout-module--inner--L9ZEK\";\nexport var fade = \"layout-module--fade--2DAUq\";","import React, { useState, useEffect } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\n// import TextHighlighter from \"./Highlighter\";\n\n\nconst SearchResult = (props) => {\n  const tempData = useStaticQuery(graphql`\n    query SearchData {\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___posted], order: DESC }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            frontmatter {\n              posted(formatString: \"YYYY-MM-DD\")\n              title\n              slug\n              extract\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const temp = [];\n    tempData.allMarkdownRemark.edges.map((e) => {\n      temp.push(e.node.frontmatter);\n    });\n    setData(temp);\n  }, []);\n\n  //表示非表示の切り替え\n  const [className, setClassName] = useState(\"\");\n  useEffect(() => {\n    let id;\n    if (props.focus && props.value !== \"\") {\n      id = setTimeout(() => {\n        setClassName(\"active\");\n      }, 100);\n    } else {\n      id = setTimeout(() => {\n        setClassName(\"\");\n      }, 100);\n    }\n    return () => {\n      clearTimeout(id);\n    };\n  }, [props.focus, props.value]);\n\n  //検索処理\n  const [result, setResult] = useState([]);\n\n  const search = () => {\n    const value = props.value.toLowerCase();\n    const temp = data.filter((e) => {\n      const target = `\n      ${e.title.toLowerCase()}\n      ${e.extract.toLowerCase()}\n    `;\n      return target.indexOf(value) !== -1;\n    });\n    setResult(temp);\n  };\n\n  useEffect(() => {\n    if (props.value !== \"\") {\n      search();\n    }\n  }, [props.value]);\n\n  return (\n    <div className={className}>\n      <div className=\"resultInner\">\n        <span className=\"res\">\n          <b>{result.length}</b>件ヒットしました\n        </span>\n        <ul>\n          {result.map((e) => {\n            return (\n              <li key={e.slug}>\n                <Link to={`/post/${e.slug}/`}>\n                  {/* <TextHighlighter\n                    title={e.title}\n                    extract={e.extract}\n                    includes={props.value}\n                  /> */}\n                  {e.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Search = (props) => {\n  const [focus, setFocus] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const onFocus = () => {\n    setFocus(true);\n  };\n  const onBlur = () => {\n    setFocus(false);\n  };\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n  return (\n    <div className={props.className} focus={focus}>\n      <input\n        type=\"text\"\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onChange={onChange}\n      />\n      <SearchResult focus={focus} value={value} />\n    </div>\n  );\n};\nexport default Search;\n","// extracted by mini-css-extract-plugin\nexport var container = \"post-module--container--10zuX\";\nexport var header = \"post-module--header--2GDA2\";\nexport var title = \"post-module--title--3xgas\";\nexport var aside = \"post-module--aside--2zS1N\";\nexport var postedTime = \"post-module--postedTime--1HXKo\";\nexport var updatedTime = \"post-module--updatedTime--Hb6Gl\";\nexport var tags = \"post-module--tags--Uey9h\";\nexport var tag = \"post-module--tag--2cdB8\";\nexport var mainImage = \"post-module--mainImage--1-D8o\";\nexport var mainImageSvg = \"post-module--mainImageSvg--12WEZ\";\nexport var mainImageCaption = \"post-module--mainImageCaption--3HfqT\";\nexport var fade = \"post-module--fade--XcyRi\";","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/Layout\";\n\n// import MainImage from \"../assets/test.svg\";\n// import MainImage from `../assets/${frontmatter.slug}.svg`;\nimport MainImage from \"../../../contents/images/sprite.svg\";\nimport SEO from \"../components/SEO\";\nimport * as styles from \"./post.module.css\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} description={frontmatter.extract}/>\n      <div className={styles.container}>\n        <header className={styles.header}>\n          <h1 className={styles.title} id={styles.title}>{frontmatter.title}</h1>\n          <aside className={styles.aside}>\n            <time dateTime={frontmatter.posted} className={styles.postedTime}>{frontmatter.posted}</time>\n            <time dateTime={frontmatter.updated} className={styles.updatedTime}>{frontmatter.updated}</time>\n            {\n            frontmatter.tags !== null ?( \n              <ul className={styles.tags}>\n                {\n                  frontmatter.tags.map((tag)=>\n                  <li className={styles.tag}>{tag}</li>\n                  )\n                }\n              </ul>\n            ):(null)\n          }\n          </aside>\n          <figure className={styles.mainImage}>\n            <svg className={styles.mainImageSvg}>\n              <use className={styles.mainImageSvgUse} xlinkHref={MainImage + \"#\" + frontmatter.slug} />\n            </svg>\n            <figcaption className={styles.mainImageCaption}>{frontmatter. extract}</figcaption>\n          </figure>\n          </header>\n\n\n          <div\n            className={styles.content}\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        posted(formatString: \"YYYY-MM-DD\")\n        updated(formatString: \"YYYY-MM-DD\")\n        slug\n        title\n        extract\n        tags\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/sprite-c12f482a2c576faa73308be759c5f5f6.svg\";"],"names":["className","to","Search","props","Header","children","Footer","SearchResult","tempData","useStaticQuery","useState","data","setData","useEffect","temp","allMarkdownRemark","edges","map","e","push","node","frontmatter","setClassName","id","focus","value","setTimeout","clearTimeout","result","setResult","toLowerCase","filter","title","extract","indexOf","length","key","slug","setFocus","setValue","type","onFocus","onBlur","onChange","target","container","header","aside","postedTime","updatedTime","tags","mainImage","mainImageSvg","mainImageCaption","Template","markdownRemark","html","Layout","SEO","description","styles","dateTime","posted","updated","tag","xlinkHref","MainImage","dangerouslySetInnerHTML","__html"],"sourceRoot":""}