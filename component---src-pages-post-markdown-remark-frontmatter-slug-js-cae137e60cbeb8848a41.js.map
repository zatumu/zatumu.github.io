{"version":3,"file":"component---src-pages-post-markdown-remark-frontmatter-slug-js-cae137e60cbeb8848a41.js","mappings":"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","sources":["webpack://myBlog/./src/pages/components/Footer.js","webpack://myBlog/./src/pages/components/Header.js","webpack://myBlog/./src/pages/components/Header.module.css","webpack://myBlog/./src/pages/components/Highlighter.js","webpack://myBlog/./src/pages/components/IndexItem.js","webpack://myBlog/./src/pages/components/Layout.js","webpack://myBlog/./src/pages/components/layout.module.css","webpack://myBlog/./src/pages/components/Modal.module.css","webpack://myBlog/./src/pages/components/Modal.js","webpack://myBlog/./src/pages/components/Search.js","webpack://myBlog/./src/pages/post/post.module.css","webpack://myBlog/./src/pages/post/{MarkdownRemark.frontmatter__slug}.js","webpack://myBlog/./contents/images/sprite.svg"],"sourcesContent":["import React from \"react\";\n\nconst Footer = () =>{\n    return(\n        <footer className=\"\">\n            <small className=\"\">&copy;</small>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Header.module.css\";\nimport { menu } from \"./_Variables\";\nimport Search from \"./Search\";\nimport Modal from \"./Modal\";\n\nconst Header = () => {\n  return (\n    <header className={styles.container}>\n      <div className={styles.inner}>\n        <h1 className={styles.siteName}>\n          <Link to=\"/\">Header</Link>\n        </h1>\n        <Search />\n        <Modal />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport var container = \"Header-module--container--3I6Xw\";\nexport var inner = \"Header-module--inner--3rdw3\";\nexport var siteName = \"Header-module--siteName--2WuQ0\";\nexport var globalNavi = \"Header-module--globalNavi--j5bJJ\";\nexport var globalNaviItem = \"Header-module--globalNaviItem--2HDOZ\";","import React from \"react\";\n\nconst TextHighlighter = (props) => {\n  const { title, extract, includes } = props;\n  const titleTemp = title.toLowerCase();\n  const titleStart = titleTemp.indexOf(includes.toLowerCase());\n  const titleEnd = titleStart + includes.length;\n  const titleItem = title.slice(titleStart, titleEnd);\n  const titleRes = title.replace(\n    titleItem,\n    `<span class=\"highLight\">${titleItem}</span>`\n  );\n  const extractTemp = extract.toLowerCase();\n  const extractStart = extractTemp.indexOf(includes.toLowerCase());\n  const extractEnd = extractStart + includes.length;\n  const extractItem = extract.slice(extractStart, extractEnd);\n  const extractRes = extract.replace(\n    extractItem,\n    `<span class=\"highLight\">${extractItem}</span>`\n  );\n  return (\n    <div>\n      <span dangerouslySetInnerHTML={{ __html: titleRes }} /><br/>\n      <span dangerouslySetInnerHTML={{ __html: extractRes }} />\n    </div>\n  );\n};\n\nexport default TextHighlighter;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./IndexItem.module.css\";\nimport MainImage from \"../../../contents/images/sprite.svg\";\n\nconst indexItem = (props) => {\n  return (\n    <li>\n      <Link href={`./post/` + props.slug}>\n        <figure>\n          <svg>\n            <use xlinkHref={MainImage + \"#\" + props.slug} />\n          </svg>\n        </figure>\n        {props.title}\n      </Link>\n    </li>\n  );\n};\n\nexport default indexItem;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport  \"../../styles/style.css\";\n\nimport * as styles from \"./layout.module.css\"\n\nconst Layout = (props) =>{\n    return(\n        <div className={styles.container}>\n            <Header />\n            <main className={styles.inner}>{props.children}</main>\n            <Footer />\n        </div>\n    );\n};\n\nexport default Layout;","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--3LvKr\";\nexport var inner = \"layout-module--inner--L9ZEK\";\nexport var fade = \"layout-module--fade--2DAUq\";","// extracted by mini-css-extract-plugin\nexport var contentsList = \"Modal-module--contentsList--2uXjt\";\nexport var contentsListBackground = \"Modal-module--contentsListBackground--2_MWI\";\nexport var fade = \"Modal-module--fade--ndhEt\";","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport IndexItem from \"./IndexItem\";\n\nimport * as styles from \"./Modal.module.css\";\n\nconst Modal = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        totalCount\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              posted(formatString: \"DD MMMM, YYYY\")\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  // テスト\n  // useStateを調べる（state）\n  const [count, setCount] = React.useState(0);\n  const [test, setTest] = React.useState(\"アクティブ\");\n\n  // function testtest(props){\n  //   const count = props.count;\n  //   if(count % 2 == 0){\n  //     setTest(test = \"ブィテクア\")\n  //   }{\n  //     setTest(test = \"アクティブ\")\n  //   }\n  // }\n\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.button} onClick={() => setCount(count + 1)}>\n        {count}\n      </div>\n      {/* <div onClick={testtest(count)}>\n        {test}\n      </div> */}\n      <nav className={styles.contentsList}>\n        <ul>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <IndexItem\n              title={node.frontmatter.title}\n              slug={node.frontmatter.slug}\n            />\n          ))}\n        </ul>\n      </nav>\n      <div className={styles.contentsListBackground}>背景</div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\nimport TextHighlighter from \"./Highlighter\";\n\nconst SearchResult = (props) => {\n  const tempData = useStaticQuery(graphql`\n    query SearchData {\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___posted], order: DESC }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            frontmatter {\n              posted(formatString: \"YYYY-MM-DD\")\n              title\n              slug\n              extract\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const temp = [];\n    tempData.allMarkdownRemark.edges.map((e) => {\n      temp.push(e.node.frontmatter);\n    });\n    setData(temp);\n  }, []);\n\n  //表示非表示の切り替え\n  const [className, setClassName] = useState(\"\");\n  useEffect(() => {\n    let id;\n    if (props.focus && props.value !== \"\") {\n      id = setTimeout(() => {\n        setClassName(\"active\");\n      }, 100);\n    } else {\n      id = setTimeout(() => {\n        setClassName(\"\");\n      }, 100);\n    }\n    return () => {\n      clearTimeout(id);\n    };\n  }, [props.focus, props.value]);\n\n  //検索処理\n  const [result, setResult] = useState([]);\n  const search = () => {\n    const value = props.value.toLowerCase();\n    const temp = data.filter((e) => {\n      const target = `\n      ${e.title.toLowerCase()}\n      ${e.extract.toLowerCase()}\n    `;\n      return target.indexOf(value) !== -1;\n    });\n    setResult(temp);\n  };\n  useEffect(() => {\n    if (props.value !== \"\") {\n      search();\n    }\n  }, [props.value]);\n\n  return (\n    <div className={className}>\n      <div className=\"resultInner\">\n        <span className=\"res\">\n          <b>{result.length}</b>件ヒットしました\n        </span>\n        <ul>\n          {result.map((e) => {\n            return (\n              <li key={e.slug}>\n                <Link to={`/${e.slug}/`}>\n                  <TextHighlighter title={e.title} extract={e.extract} includes={props.value} />\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Search = (props) => {\n  const [focus, setFocus] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const onFocus = () => {\n    setFocus(true);\n  };\n  const onBlur = () => {\n    setFocus(false);\n  };\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n  return (\n    <div className={props.className} focus={focus}>\n      <input\n        type=\"text\"\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onChange={onChange}\n      />\n      <SearchResult focus={focus} value={value} />\n    </div>\n  );\n};\nexport default Search;\n","// extracted by mini-css-extract-plugin\nexport var container = \"post-module--container--10zuX\";\nexport var header = \"post-module--header--2GDA2\";\nexport var title = \"post-module--title--3xgas\";\nexport var aside = \"post-module--aside--2zS1N\";\nexport var postedTime = \"post-module--postedTime--1HXKo\";\nexport var updatedTime = \"post-module--updatedTime--Hb6Gl\";\nexport var tags = \"post-module--tags--Uey9h\";\nexport var tag = \"post-module--tag--2cdB8\";\nexport var mainImage = \"post-module--mainImage--1-D8o\";\nexport var mainImageSvg = \"post-module--mainImageSvg--12WEZ\";\nexport var mainImageCaption = \"post-module--mainImageCaption--3HfqT\";\nexport var fade = \"post-module--fade--XcyRi\";","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/Layout\";\n\n// import MainImage from \"../assets/test.svg\";\n// import MainImage from `../assets/${frontmatter.slug}.svg`;\nimport MainImage from \"../../../contents/images/sprite.svg\";\nimport SEO from \"../components/SEO\";\nimport * as styles from \"./post.module.css\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} description={frontmatter.extract}/>\n      <div className={styles.container}>\n        <header className={styles.header}>\n          <h1 className={styles.title} id={styles.title}>{frontmatter.title}</h1>\n          <aside className={styles.aside}>\n            <time dateTime={frontmatter.posted} className={styles.postedTime}>{frontmatter.posted}</time>\n            <time dateTime={frontmatter.updated} className={styles.updatedTime}>{frontmatter.updated}</time>\n            {\n            frontmatter.tags !== null ?( \n              <ul className={styles.tags}>\n                {\n                  frontmatter.tags.map((tag)=>\n                  <li className={styles.tag}>{tag}</li>\n                  )\n                }\n              </ul>\n            ):(null)\n          }\n          </aside>\n          <figure className={styles.mainImage}>\n            <svg className={styles.mainImageSvg}>\n              <use className={styles.mainImageSvgUse} xlinkHref={MainImage + \"#\" + frontmatter.slug} />\n            </svg>\n            <figcaption className={styles.mainImageCaption}>{frontmatter. extract}</figcaption>\n          </figure>\n          </header>\n\n\n          <div\n            className={styles.content}\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        posted(formatString: \"YYYY-MM-DD\")\n        updated(formatString: \"YYYY-MM-DD\")\n        slug\n        title\n        extract\n        tags\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/sprite-c12f482a2c576faa73308be759c5f5f6.svg\";"],"names":["className","to","Search","Modal","props","title","extract","includes","titleStart","toLowerCase","indexOf","titleEnd","length","titleItem","slice","titleRes","replace","extractStart","extractEnd","extractItem","extractRes","dangerouslySetInnerHTML","__html","href","slug","xlinkHref","MainImage","Header","children","Footer","contentsList","contentsListBackground","data","useStaticQuery","React","count","setCount","styles","onClick","allMarkdownRemark","edges","map","node","IndexItem","frontmatter","SearchResult","tempData","useState","setData","useEffect","temp","e","push","setClassName","id","focus","value","setTimeout","clearTimeout","result","setResult","filter","key","setFocus","setValue","type","onFocus","onBlur","onChange","target","container","header","aside","postedTime","updatedTime","tags","mainImage","mainImageSvg","mainImageCaption","Template","markdownRemark","html","Layout","SEO","description","dateTime","posted","updated","tag"],"sourceRoot":""}