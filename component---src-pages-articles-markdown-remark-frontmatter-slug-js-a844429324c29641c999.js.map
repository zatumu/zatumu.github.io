{"version":3,"file":"component---src-pages-articles-markdown-remark-frontmatter-slug-js-a844429324c29641c999.js","mappings":"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","sources":["webpack://myBlog/./src/pages/articles/post.module.css","webpack://myBlog/./src/pages/articles/{MarkdownRemark.frontmatter__slug}.js","webpack://myBlog/./src/pages/components/Footer.js","webpack://myBlog/./src/pages/components/Header.js","webpack://myBlog/./src/pages/components/_Variables.js","webpack://myBlog/./src/pages/components/Header.module.css","webpack://myBlog/./src/pages/components/Layout.js","webpack://myBlog/./src/pages/components/layout.module.css","webpack://myBlog/./src/pages/components/Search.js","webpack://myBlog/./contents/images/sprite.svg"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"post-module--container--2_7-d\";\nexport var header = \"post-module--header--37YbD\";\nexport var title = \"post-module--title--2xS_X\";\nexport var aside = \"post-module--aside--1WmD2\";\nexport var postedTime = \"post-module--postedTime--1uk-K\";\nexport var updatedTime = \"post-module--updatedTime--3Asp5\";\nexport var tags = \"post-module--tags--rR-9R\";\nexport var tag = \"post-module--tag--20TMG\";\nexport var mainImage = \"post-module--mainImage--3yS8m\";\nexport var mainImageSvg = \"post-module--mainImageSvg--1M9Oj\";\nexport var mainImageCaption = \"post-module--mainImageCaption--12woV\";\nexport var fade = \"post-module--fade--2NZ-Y\";","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/Layout\";\n\n// import MainImage from \"../assets/test.svg\";\n// import MainImage from `../assets/${frontmatter.slug}.svg`;\nimport MainImage from \"../../../contents/images/sprite.svg\";\nimport SEO from \"../components/SEO\";\nimport * as styles from \"./post.module.css\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} description={frontmatter.extract}/>\n      <div className={styles.container}>\n        <header className={styles.header}>\n          <h1 className={styles.title} id={styles.title}>{frontmatter.title}</h1>\n          <aside className={styles.aside}>\n            <time dateTime={frontmatter.posted} className={styles.postedTime}>{frontmatter.posted}</time>\n            <time dateTime={frontmatter.updated} className={styles.updatedTime}>{frontmatter.updated}</time>\n            {\n            frontmatter.tags !== null ?( \n              <ul className={styles.tags}>\n                {\n                  frontmatter.tags.map((tag)=>\n                  <li className={styles.tag}>{tag}</li>\n                  )\n                }\n              </ul>\n            ):(null)\n          }\n          </aside>\n          <figure className={styles.mainImage}>\n            <svg className={styles.mainImageSvg}>\n              <use className={styles.mainImageSvgUse} xlinkHref={MainImage + \"#\" + frontmatter.slug} />\n            </svg>\n            <figcaption className={styles.mainImageCaption}>{frontmatter. extract}</figcaption>\n          </figure>\n          </header>\n          \n          <div\n            className={styles.content}\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        posted(formatString: \"YYYY-MM-DD\")\n        updated(formatString: \"YYYY-MM-DD\")\n        slug\n        title\n        extract\n        tags\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nconst Footer = () =>{\n    return(\n        <footer className=\"\">\n            <small className=\"\">&copy;</small>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Header.module.css\";\nimport { menu } from \"./_Variables\";\nimport { useSiteMetadata } from \"./_Variables\";\nimport Search from \"./Search\";\n// import Modal from \"./Modal\";\n\n\nconst Header = props => {\n  const { title } = useSiteMetadata();\n  return (\n    <header className={styles.container}>\n      <div className={styles.inner}>\n        <h1 className={styles.siteName}>\n          <Link to=\"/\">\n            {title}\n          </Link>\n        </h1>\n        <Search />\n        {/* <Modal /> */}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const name = \"ざつむ\";\n// export const menu ={\n//     \"about\":\"このブログについて\",\n//     \"want\":\"ほしいもの\"\n// };\nexport const menu = {\n  about: \"このブログについて\",\n  want: \"ほしいもの\",\n};\n\nexport const useSiteMetadata = () =>{\n  const { site } = useStaticQuery(\n    graphql`\n    query{\n      site{\n        siteMetadata{\n          title\n          subtitle\n        }\n      }\n    }\n    `\n  )\n  return site.siteMetadata\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"Header-module--container--3I6Xw\";\nexport var inner = \"Header-module--inner--3rdw3\";\nexport var siteName = \"Header-module--siteName--2WuQ0\";\nexport var globalNavi = \"Header-module--globalNavi--j5bJJ\";\nexport var globalNaviItem = \"Header-module--globalNaviItem--2HDOZ\";","import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport  \"../../styles/style.css\";\n\nimport * as styles from \"./layout.module.css\"\n\nconst Layout = (props) =>{\n    return(\n        <div className={styles.container}>\n            <Header />\n            <main className={styles.inner}>{props.children}</main>\n            <Footer />\n        </div>\n    );\n};\n\nexport default Layout;","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--3LvKr\";\nexport var inner = \"layout-module--inner--L9ZEK\";\nexport var fade = \"layout-module--fade--2DAUq\";","import React, { useState, useEffect } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\n// import TextHighlighter from \"./Highlighter\";\n\n\nconst SearchResult = (props) => {\n  const tempData = useStaticQuery(graphql`\n    query SearchData {\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___posted], order: DESC }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            frontmatter {\n              posted(formatString: \"YYYY-MM-DD\")\n              title\n              slug\n              extract\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const temp = [];\n    tempData.allMarkdownRemark.edges.map((e) => {\n      temp.push(e.node.frontmatter);\n    });\n    setData(temp);\n  }, []);\n\n  //表示非表示の切り替え\n  const [className, setClassName] = useState(\"\");\n  useEffect(() => {\n    let id;\n    if (props.focus && props.value !== \"\") {\n      id = setTimeout(() => {\n        setClassName(\"active\");\n      }, 100);\n    } else {\n      id = setTimeout(() => {\n        setClassName(\"\");\n      }, 100);\n    }\n    return () => {\n      clearTimeout(id);\n    };\n  }, [props.focus, props.value]);\n\n  //検索処理\n  const [result, setResult] = useState([]);\n\n  const search = () => {\n    const value = props.value.toLowerCase();\n    const temp = data.filter((e) => {\n      const target = `\n      ${e.title.toLowerCase()}\n      ${e.extract.toLowerCase()}\n    `;\n      return target.indexOf(value) !== -1;\n    });\n    setResult(temp);\n  };\n\n  useEffect(() => {\n    if (props.value !== \"\") {\n      search();\n    }\n  }, [props.value]);\n\n  return (\n    <div className={className}>\n      <div className=\"resultInner\">\n        <span className=\"res\">\n          <b>{result.length}</b>件ヒットしました\n        </span>\n        <ul>\n          {result.map((e) => {\n            return (\n              <li key={e.slug}>\n                <Link to={`/post/${e.slug}/`}>\n                  {/* <TextHighlighter\n                    title={e.title}\n                    extract={e.extract}\n                    includes={props.value}\n                  /> */}\n                  <div><span>{e.title}</span><br /><span>{e.extract}</span></div>\n                  \n                  \n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Search = (props) => {\n  const [focus, setFocus] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const onFocus = () => {\n    setFocus(true);\n  };\n  const onBlur = () => {\n    setFocus(false);\n  };\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n  return (\n    <div className={props.className} focus={focus}>\n      <input\n        type=\"text\"\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onChange={onChange}\n      />\n      <SearchResult focus={focus} value={value} />\n    </div>\n  );\n};\nexport default Search;\n","export default __webpack_public_path__ + \"static/sprite-c12f482a2c576faa73308be759c5f5f6.svg\";"],"names":["container","header","title","aside","postedTime","updatedTime","tags","mainImage","mainImageSvg","mainImageCaption","Template","markdownRemark","data","frontmatter","html","Layout","SEO","description","extract","className","styles","id","dateTime","posted","updated","map","tag","xlinkHref","MainImage","slug","dangerouslySetInnerHTML","__html","props","useStaticQuery","site","siteMetadata","to","Search","Header","children","Footer","SearchResult","tempData","useState","setData","useEffect","temp","allMarkdownRemark","edges","e","push","node","setClassName","focus","value","setTimeout","clearTimeout","result","setResult","toLowerCase","filter","indexOf","length","key","setFocus","setValue","type","onFocus","onBlur","onChange","target"],"sourceRoot":""}